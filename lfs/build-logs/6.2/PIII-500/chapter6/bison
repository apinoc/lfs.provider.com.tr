
Sun Jul 16 07:12:22 PDT 2006

Making check in build-aux
make[1]: Entering directory `/sources/bison-2.2/build-aux'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/sources/bison-2.2/build-aux'
Making check in po
make[1]: Entering directory `/sources/bison-2.2/po'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/sources/bison-2.2/po'
Making check in runtime-po
make[1]: Entering directory `/sources/bison-2.2/runtime-po'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/sources/bison-2.2/runtime-po'
Making check in lib
make[1]: Entering directory `/sources/bison-2.2/lib'
make  check-am
make[2]: Entering directory `/sources/bison-2.2/lib'
make[2]: Nothing to be done for `check-am'.
make[2]: Leaving directory `/sources/bison-2.2/lib'
make[1]: Leaving directory `/sources/bison-2.2/lib'
Making check in data
make[1]: Entering directory `/sources/bison-2.2/data'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/sources/bison-2.2/data'
Making check in src
make[1]: Entering directory `/sources/bison-2.2/src'
make  check-am
make[2]: Entering directory `/sources/bison-2.2/src'
make[2]: Nothing to be done for `check-am'.
make[2]: Leaving directory `/sources/bison-2.2/src'
make[1]: Leaving directory `/sources/bison-2.2/src'
Making check in doc
make[1]: Entering directory `/sources/bison-2.2/doc'
make[1]: Nothing to be done for `check'.
make[1]: Leaving directory `/sources/bison-2.2/doc'
Making check in examples
make[1]: Entering directory `/sources/bison-2.2/examples'
Making check in calc++
make[2]: Entering directory `/sources/bison-2.2/examples/calc++'
make  check-am
make[3]: Entering directory `/sources/bison-2.2/examples/calc++'
make  calc++
make[4]: Entering directory `/sources/bison-2.2/examples/calc++'
if g++ -DHAVE_CONFIG_H -I. -I. -I../..     -g -O2 -MT calc++-scanner.o -MD -MP -MF ".deps/calc++-scanner.Tpo" -c -o calc++-scanner.o calc++-scanner.cc; \
then mv -f ".deps/calc++-scanner.Tpo" ".deps/calc++-scanner.Po"; else rm -f ".deps/calc++-scanner.Tpo"; exit 1; fi
if g++ -DHAVE_CONFIG_H -I. -I. -I../..     -g -O2 -MT calc++.o -MD -MP -MF ".deps/calc++.Tpo" -c -o calc++.o `test -f './calc++.cc' || echo './'`./calc++.cc; \
then mv -f ".deps/calc++.Tpo" ".deps/calc++.Po"; else rm -f ".deps/calc++.Tpo"; exit 1; fi
if g++ -DHAVE_CONFIG_H -I. -I. -I../..     -g -O2 -MT calc++-driver.o -MD -MP -MF ".deps/calc++-driver.Tpo" -c -o calc++-driver.o `test -f './calc++-driver.cc' || echo './'`./calc++-driver.cc; \
then mv -f ".deps/calc++-driver.Tpo" ".deps/calc++-driver.Po"; else rm -f ".deps/calc++-driver.Tpo"; exit 1; fi
if g++ -DHAVE_CONFIG_H -I. -I. -I../..     -g -O2 -MT calc++-parser.o -MD -MP -MF ".deps/calc++-parser.Tpo" -c -o calc++-parser.o `test -f './calc++-parser.cc' || echo './'`./calc++-parser.cc; \
then mv -f ".deps/calc++-parser.Tpo" ".deps/calc++-parser.Po"; else rm -f ".deps/calc++-parser.Tpo"; exit 1; fi
g++  -g -O2   -o calc++  calc++-scanner.o calc++.o calc++-driver.o calc++-parser.o  
make[4]: Leaving directory `/sources/bison-2.2/examples/calc++'
make  check-TESTS
make[4]: Entering directory `/sources/bison-2.2/examples/calc++'
PASS: test
==================
All 1 tests passed
==================
make[4]: Leaving directory `/sources/bison-2.2/examples/calc++'
make[3]: Leaving directory `/sources/bison-2.2/examples/calc++'
make[2]: Leaving directory `/sources/bison-2.2/examples/calc++'
make[2]: Entering directory `/sources/bison-2.2/examples'
make[2]: Nothing to be done for `check-am'.
make[2]: Leaving directory `/sources/bison-2.2/examples'
make[1]: Leaving directory `/sources/bison-2.2/examples'
Making check in tests
make[1]: Entering directory `/sources/bison-2.2/tests'
make  bison
make[2]: Entering directory `/sources/bison-2.2/tests'
make[2]: `bison' is up to date.
make[2]: Leaving directory `/sources/bison-2.2/tests'
make  check-local
make[2]: Entering directory `/sources/bison-2.2/tests'
/bin/sh ./testsuite 
## ------------------------- ##
## GNU Bison 2.2 test suite. ##
## ------------------------- ##

Input Processing.

  1: Invalid dollar-n                             ok
  2: Invalid @n                                   ok
  3: Type Clashes                                 ok
  4: Unused values                                ok
  5: Incompatible Aliases                         ok
  6: Torturing the Scanner                        ok
  7: Typed symbol aliases                         ok
  8: Require 1.0                                  ok
  9: Require 2.2                                  ok
 10: Require 100.0                                ok

Output file names.

 11: Output files:  -dv                           ok
 12: Output files:  -dv >&-                       ok
 13: Output files:  -dv -o foo.c                  ok
 14: Output files:  -dv -o foo.tab.c              ok
 15: Output files:  -dv -y                        ok
 16: Output files:  -dv -b bar                    ok
 17: Output files:  -dv -g -o foo.c               ok
 18: Output files: %defines %verbose              ok
 19: Output files: %defines %verbose %yacc        ok
 20: Output files: %defines %verbose %yacc        ok
 21: Output files: %file-prefix=bar %defines %verbose  ok
 22: Output files: %output=bar.c %defines %verbose %yacc  ok
 23: Output files: %file-prefix=baz %output=bar.c %defines %verbose %yacc  ok
 24: Output files: %defines %verbose              ok
 25: Output files: %defines %verbose  -o foo.c    ok
 26: Output files:  --defines=foo.hpp -o foo.c++  ok
 27: Output files:  -o foo.c++ --graph=foo.gph    ok
 28: Output files: %skeleton lalr1.cc %defines %verbose  ok
 29: Output files: %skeleton lalr1.cc %defines %verbose  ok
 30: Output files: %skeleton lalr1.cc %defines %verbose -o subdir/foo.cc ok

Grammar Sets (Firsts etc.).

 31: Nullable                                     ok
 32: Broken Closure                               ok
 33: Firsts                                       ok
 34: Accept                                       ok

Grammar Reduction.

 35: Useless Terminals                            ok
 36: Useless Nonterminals                         ok
 37: Useless Rules                                ok
 38: Reduced Automaton                            ok
 39: Underivable Rules                            ok
 40: Empty Language                               ok

User Actions.

 41: Prologue synch line                          ok
 42: %union synch line                            ok
 43: Postprologue synch line                      ok
 44: Action synch line                            ok
 45: Epilogue synch line                          ok

Parser Headers.

 46: %union and --defines                         ok
 47: Invalid CPP guards: input/input              ok
 48: Invalid CPP guards: 9foo                     ok
 49: export YYLTYPE                               ok

User Actions.

 50: Mid-rule actions                             ok
 51: Exotic Dollars                               ok
 52: Printers and Destructors :                   ok
 53: Printers and Destructors with union:         ok
 54: Printers and Destructors : %defines %skeleton lalr1.ccok
 55: Printers and Destructors with union: %defines %skeleton lalr1.ccok
 56: Printers and Destructors : %glr-parser       ok
 57: Printers and Destructors with union: %glr-parserok

Conflicts.

 58: S/R in initial                               ok
 59: %nonassoc and eof                            ok
 60: Unresolved SR Conflicts                      ok
 61: Resolved SR Conflicts                        ok
 62: Defaulted Conflicted Reduction               ok
 63: %expect not enough                           ok
 64: %expect right                                ok
 65: %expect too much                             ok
 66: %expect with reduce conflicts                ok
 67: %no-default-prec without %prec               ok
 68: %no-default-prec with %prec                  ok
 69: %default-prec                                ok

Simple LALR(1) Calculator.

 70: Calculator                                   ok
 71: Calculator %defines                          ok
 72: Calculator %locations                        ok
 73: Calculator %name-prefix=calc               ok
 74: Calculator %verbose                          ok
 75: Calculator %yacc                             ok
 76: Calculator %error-verbose                    ok
 77: Calculator %pure-parser %locations           ok
 78: Calculator %error-verbose %locations         ok
 79: Calculator %error-verbose %locations %defines %name-prefix=calc %verbose %yaccok
 80: Calculator %debug                            ok
 81: Calculator %error-verbose %debug %locations %defines %name-prefix=calc %verbose %yaccok
 82: Calculator %pure-parser %error-verbose %debug %locations %defines %name-prefix=calc %verbose %yaccok
 83: Calculator %pure-parser %error-verbose %debug %locations %defines %name-prefix=calc %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count}ok

Simple GLR Calculator.

 84: Calculator %glr-parser                       ok
 85: Calculator %glr-parser %defines              ok
 86: Calculator %glr-parser %locations            ok
 87: Calculator %glr-parser %name-prefix=calc   ok
 88: Calculator %glr-parser %verbose              ok
 89: Calculator %glr-parser %yacc                 ok
 90: Calculator %glr-parser %error-verbose        ok
 91: Calculator %glr-parser %pure-parser %locationsok
 92: Calculator %glr-parser %error-verbose %locationsok
 93: Calculator %glr-parser %error-verbose %locations %defines %name-prefix=calc %verbose %yaccok
 94: Calculator %glr-parser %debug                ok
 95: Calculator %glr-parser %error-verbose %debug %locations %defines %name-prefix=calc %verbose %yaccok
 96: Calculator %glr-parser %pure-parser %error-verbose %debug %locations %defines %name-prefix=calc %verbose %yaccok
 97: Calculator %glr-parser %pure-parser %error-verbose %debug %locations %defines %name-prefix=calc %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count}ok

Simple LALR(1) C++ Calculator.

 98: Calculator %skeleton lalr1.cc %defines %locations ok
 99: Calculator %skeleton lalr1.cc %defines %locations %error-verbose %name-prefix=calc %verbose %yaccok
100: Calculator %skeleton lalr1.cc %defines %locations %error-verbose %debug %name-prefix=calc %verbose %yaccok
101: Calculator %skeleton lalr1.cc %defines %locations %pure-parser %error-verbose %debug %name-prefix=calc %verbose %yaccok
102: Calculator %skeleton lalr1.cc %defines %locations %pure-parser %error-verbose %debug %name-prefix=calc %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count}ok

Simple GLR C++ Calculator.

103: Calculator %skeleton glr.cc %defines %locations %pure-parser %error-verbose %debug %name-prefix=calc %verbose %yaccok
104: Calculator %skeleton glr.cc %defines %locations %pure-parser %error-verbose %debug %name-prefix=calc %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count}ok

Torture Tests.

105: Big triangle                                 ok
106: Big horizontal                               ok
107: Many look-ahead tokens                       ok
108: Exploding the Stack Size with Alloca         ok
109: Exploding the Stack Size with Malloc         ok

Existing Grammars.

110: GNU AWK Grammar                              ok
111: GNU Cim Grammar                              ok
112: GNU pic Grammar                              ok

Regression tests.

113: Trivial grammars                             ok
114: Early token definitions                      ok
115: Braces parsing                               ok
116: Duplicate string                             ok
117: Rule Line Numbers                            ok
118: Mixing %token styles                         ok
119: Invalid inputs                               ok
120: Invalid inputs with {}                       ok
121: Token definitions                            ok
122: Characters Escapes                           ok
123: Web2c Report                                 ok
124: Web2c Actions                                ok
125: Dancer                                       ok
126: Dancer %glr-parser                           ok
127: Dancer %skeleton lalr1.cc                  ok
128: Expecting two tokens                         ok
129: Expecting two tokens %glr-parser             ok
130: Expecting two tokens %skeleton lalr1.cc    ok

C++ Features.

131: Doxygen Public Documentation                 skipped (c++.at:102)
132: Doxygen Private Documentation                skipped (c++.at:103)

C++ Type Syntax (GLR).

133: GLR: Resolve ambiguity, impure, no locations ok
134: GLR: Resolve ambiguity, impure, locations    ok
135: GLR: Resolve ambiguity, pure, no locations   ok
136: GLR: Resolve ambiguity, pure, locations      ok
137: GLR: Merge conflicting parses, impure, no locationsok
138: GLR: Merge conflicting parses, impure, locationsok
139: GLR: Merge conflicting parses, pure, no locationsok
140: GLR: Merge conflicting parses, pure, locationsok
141: GLR: Verbose messages, resolve ambiguity, impure, no locationsok

GLR Regression Tests

142: Badly Collapsed GLR States                   ok
143: Improper handling of embedded actions and dollar(-N) in GLR parsersok
144: Improper merging of GLR delayed action sets  ok
145: Duplicate representation of merged trees     ok
146: User destructor for unresolved GLR semantic valueok
147: User destructor after an error during a split parseok
148: Duplicated user destructor for lookahead     ok
149: Incorrectly initialized location for empty right-hand side in GLRok
150: No users destructors if stack 0 deleted      ok
151: Corrupted semantic options if user action cuts parseok
152: Undesirable destructors if user action cuts parseok
153: Leaked semantic values if user action cuts parseok
154: Incorrect lookahead during deterministic GLR ok
155: Incorrect lookahead during nondeterministic GLRok
156: Leaked semantic values when reporting ambiguityok
157: Leaked lookahead after nondeterministic parse syntax errorok
158: Uninitialized location when reporting ambiguityok

## ------------- ##
## Test results. ##
## ------------- ##

156 tests were successful.
2 tests were skipped.
make[2]: Leaving directory `/sources/bison-2.2/tests'
make[1]: Leaving directory `/sources/bison-2.2/tests'
make[1]: Entering directory `/sources/bison-2.2'
make[1]: Nothing to be done for `check-am'.
make[1]: Leaving directory `/sources/bison-2.2'
