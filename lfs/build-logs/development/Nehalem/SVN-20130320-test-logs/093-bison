Thu Mar 28 03:30:11 CET 2013
make[1]: Entering directory `/sources/bison-2.7'
  GEN      public-submodule-commit
make  check-recursive
make[2]: Entering directory `/sources/bison-2.7'
Making check in build-aux
make[3]: Entering directory `/sources/bison-2.7/build-aux'
make[3]: Nothing to be done for `check'.
make[3]: Leaving directory `/sources/bison-2.7/build-aux'
Making check in po
make[3]: Entering directory `/sources/bison-2.7/po'
make[3]: Nothing to be done for `check'.
make[3]: Leaving directory `/sources/bison-2.7/po'
Making check in runtime-po
make[3]: Entering directory `/sources/bison-2.7/runtime-po'
make[3]: Nothing to be done for `check'.
make[3]: Leaving directory `/sources/bison-2.7/runtime-po'
Making check in lib
make[3]: Entering directory `/sources/bison-2.7/lib'
make  check-am
make[4]: Entering directory `/sources/bison-2.7/lib'
make[4]: Nothing to be done for `check-am'.
make[4]: Leaving directory `/sources/bison-2.7/lib'
make[3]: Leaving directory `/sources/bison-2.7/lib'
Making check in data
make[3]: Entering directory `/sources/bison-2.7/data'
make[3]: Nothing to be done for `check'.
make[3]: Leaving directory `/sources/bison-2.7/data'
Making check in src
make[3]: Entering directory `/sources/bison-2.7/src'
make  check-am
make[4]: Entering directory `/sources/bison-2.7/src'
make[4]: Nothing to be done for `check-am'.
make[4]: Leaving directory `/sources/bison-2.7/src'
make[3]: Leaving directory `/sources/bison-2.7/src'
Making check in doc
make[3]: Entering directory `/sources/bison-2.7/doc'
make[3]: Nothing to be done for `check'.
make[3]: Leaving directory `/sources/bison-2.7/doc'
Making check in examples
make[3]: Entering directory `/sources/bison-2.7/examples'
Making check in calc++
make[4]: Entering directory `/sources/bison-2.7/examples/calc++'
make  check-am
make[5]: Entering directory `/sources/bison-2.7/examples/calc++'
make  calc++
make[6]: Entering directory `/sources/bison-2.7/examples/calc++'
  CXX      calc++-scanner.o
  CXX      calc++.o
  CXX      calc++-driver.o
  CXX      calc++-parser.o
  CXXLD    calc++
make[6]: Leaving directory `/sources/bison-2.7/examples/calc++'
make  check-TESTS
make[6]: Entering directory `/sources/bison-2.7/examples/calc++'
PASS: test
=============
1 test passed
=============
make[6]: Leaving directory `/sources/bison-2.7/examples/calc++'
make[5]: Leaving directory `/sources/bison-2.7/examples/calc++'
make[4]: Leaving directory `/sources/bison-2.7/examples/calc++'
make[4]: Entering directory `/sources/bison-2.7/examples'
make[4]: Nothing to be done for `check-am'.
make[4]: Leaving directory `/sources/bison-2.7/examples'
make[3]: Leaving directory `/sources/bison-2.7/examples'
Making check in tests
make[3]: Entering directory `/sources/bison-2.7/tests'
make  bison
make[4]: Entering directory `/sources/bison-2.7/tests'
make[4]: `bison' is up to date.
make[4]: Leaving directory `/sources/bison-2.7/tests'
make  check-local
make[4]: Entering directory `/sources/bison-2.7/tests'
/bin/sh ./testsuite 
## ------------------------- ##
## GNU Bison 2.7 test suite. ##
## ------------------------- ##

Input Processing.

  1: Invalid inputs                                  ok
  2: Invalid inputs with {}                          ok
  3: Invalid $n and @n                               ok
  4: Type Clashes                                    ok
  5: Unused values                                   ok
  6: Unused values before symbol declarations        ok
  7: Default %printer and %destructor redeclared     ok
  8: Per-type %printer and %destructor redeclared    ok
  9: Unused values with default %destructor          ok
 10: Unused values with per-type %destructor         ok
 11: Incompatible Aliases                            ok
 12: Torturing the Scanner                           ok
 13: Typed symbol aliases                            ok
 14: Require 1.0                                     ok
 15: Require 2.7                                     ok
 16: Require 100.0                                   ok
 17: String aliases for character tokens             ok
 18: Symbols                                         ok
 19: Numbered tokens                                 ok
 20: Unclosed constructs                             ok
 21: %start after first rule                         ok
 22: %prec takes a token                             ok
 23: %prec's token must be defined                   ok
 24: Reject unused %code qualifiers                  ok
 25: %define errors                                  ok
 26: %define, --define, --force-define               ok
 27: %define Boolean variables                       ok
 28: %define enum variables                          ok
 29: %define backward compatibility                  ok
 30: Unused %define api.pure                         ok
 31: C++ namespace reference errors                  ok
 32: Bad character literals                          ok
 33: Bad escapes in literals                         ok
 34: LAC: Errors for %define                         ok
 35: -Werror is not affected by -Wnone and -Wall     ok
 36: %name-prefix and %define api.prefix are incompatible ok
 37: Stray $ or @                                    ok
 38: Code injection                                  ok

Named references tests.

 39: Tutorial calculator                             ok
 40: Undefined and ambiguous references              ok
 41: Misleading references                           ok
 42: Many kinds of errors                            ok
 43: Missing identifiers in brackets                 ok
 44: Redundant words in brackets                     ok
 45: Comments in brackets                            ok
 46: Stray symbols in brackets                       ok
 47: Redundant words in LHS brackets                 ok
 48: Factored LHS                                    ok
 49: Unresolved references                           ok
 50: $ or @ followed by . or -                       ok

Output file names.

 51: Output files:  -dv                              ok
 52: Output files:  -dv >&-                          ok
 53: Output files:  -dv -o foo.c                     ok
 54: Output files:  -dv -o foo.tab.c                 ok
 55: Output files:  -dv -y                           ok
 56: Output files:  -dv -b bar                       ok
 57: Output files:  -dv -g -o foo.c                  ok
 58: Output files: %defines %verbose                 ok
 59: Output files: %defines %verbose %yacc           ok
 60: Output files: %defines %verbose %yacc           ok
 61: Output files: %file-prefix "bar" %defines %verbose   ok
 62: Output files: %output="bar.c" %defines %verbose %yacc   ok
 63: Output files: %file-prefix="baz" %output "bar.c" %defines %verbose %yacc   ok
 64: Output files: %defines %verbose                 ok
 65: Output files: %defines %verbose  -o foo.c       ok
 66: Output files:  --defines=foo.hpp -o foo.c++     ok
 67: Output files: %defines "foo.hpp" -o foo.c++     ok
 68: Output files:  -o foo.c++ --graph=foo.gph       ok
 69: Output files: %skeleton "lalr1.cc" %defines %verbose   ok
 70: Output files: %skeleton "lalr1.cc" %defines %verbose   ok
 71: Output files: %skeleton "lalr1.cc" %defines %verbose -o subdir/foo.cc  ok
 72: Output files: %skeleton "lalr1.cc" %defines %verbose %file-prefix "output_dir/foo"   ok
 73: Conflicting output files:  --graph="foo.tab.c"  ok
 74: Conflicting output files: %defines "foo.output" -v ok
 75: Conflicting output files: %skeleton "lalr1.cc" %defines --graph="location.hh" ok
 76: Conflicting output files:  -o foo.y             ok
 77: Output file name: `~!@#$%^&*()-=_+{}[]|\:;<>, .' ok
 78: Output file name: (                             ok
 79: Output file name: )                             ok
 80: Output file name: #                             ok
 81: Output file name: @@                            ok
 82: Output file name: @{                            ok
 83: Output file name: @}                            ok
 84: Output file name: [                             ok
 85: Output file name: ]                             ok
 86: Graph with no conflicts                         ok
 87: Graph with unsolved S/R                         ok
 88: Graph with solved S/R                           ok
 89: Graph with R/R                                  ok
 90: Graph with reductions with multiple LAT         ok
 91: Graph with a reduction rule both enabled and disabled ok

Skeleton Support.

 92: Relative skeleton file names                    ok
 93: Installed skeleton file names                   ok
 94: %define Boolean variables: invalid skeleton defaults ok
 95: Complaining during macro argument expansion     ok
 96: Fatal errors make M4 exit immediately           ok
 97: Fatal errors but M4 continues producing output  ok

Grammar Sets (Firsts etc.).

 98: Nullable                                        ok
 99: Broken Closure                                  ok
100: Firsts                                          ok
101: Accept                                          ok

Grammar Reduction.

102: Useless Terminals                               ok
103: Useless Nonterminals                            ok
104: Useless Rules                                   ok
105: Reduced Automaton                               ok
106: Underivable Rules                               ok
107: Empty Language                                  ok
108: no %define lr.type: Single State Split          ok
109: %define lr.type lalr: Single State Split        ok
110: %define lr.type ielr: Single State Split        ok
111: %define lr.type canonical-lr: Single State Split ok
112: no %define lr.type: Lane Split                  ok
113: %define lr.type lalr: Lane Split                ok
114: %define lr.type ielr: Lane Split                ok
115: %define lr.type canonical-lr: Lane Split        ok
116: no %define lr.type: Complex Lane Split          ok
117: %define lr.type lalr: Complex Lane Split        ok
118: %define lr.type ielr: Complex Lane Split        ok
119: %define lr.type canonical-lr: Complex Lane Split ok
120: no %define lr.type: Split During Added Lookahead Propagation ok
121: %define lr.type lalr: Split During Added Lookahead Propagation ok
122: %define lr.type ielr: Split During Added Lookahead Propagation ok
123: %define lr.type canonical-lr: Split During Added Lookahead Propagation ok
124: no %define lr.default-reductions                ok
125: %define lr.default-reductions most              ok
126: %define lr.default-reductions consistent        ok
127: %define lr.default-reductions accepting         ok

User Actions.

128: Prologue syncline                               ok
129: %union syncline                                 ok
130: Postprologue syncline                           ok
131: Action syncline                                 ok
132: Epilogue syncline                               ok
133: %code top syncline                              ok
134: %no-lines                                       ok
135: %no-lines                                       ok
136: %no-lines                                       ok
137: %no-lines                                       ok

Parser Headers.

138: Invalid CPP guards:  --defines=input/input.h    ok
139: Invalid CPP guards:  --defines=9foo.h           ok
140: Invalid CPP guards: %glr-parser --defines=input/input.h ok
141: Invalid CPP guards: %glr-parser --defines=9foo.h ok
142: export YYLTYPE                                  ok
143: Several parsers                                 ok

User Actions.

144: Mid-rule actions                                ok
145: Initial location: yacc.c                        ok
146: Initial location: yacc.c %define api.pure full  ok
147: Initial location: yacc.c %define api.pure %parse-param { int x } ok
148: Initial location: yacc.c %define api.push-pull both ok
149: Initial location: yacc.c %define api.push-pull both %define api.pure full ok
150: Initial location: glr.c                         ok
151: Initial location: glr.c %define api.pure        ok
152: Initial location: lalr1.cc                      ok
153: Initial location: glr.cc                        ok
154: Initial location: yacc.c %define api.pure full  ok
155: Initial location: yacc.c %define api.pure full  ok
156: Location print: yacc.c                          ok
157: Location print: glr.c                           ok
158: Exotic Dollars                                  ok
159: Printers and Destructors                        ok
160: Printers and Destructors with union             ok
161: Printers and Destructors: %defines %skeleton "lalr1.cc" ok
162: Printers and Destructors with union: %defines %skeleton "lalr1.cc" ok
163: Printers and Destructors: %glr-parser           ok
164: Printers and Destructors with union: %glr-parser ok
165: Default tagless %printer and %destructor        ok
166: Default tagged and per-type %printer and %destructor ok
167: Default %printer and %destructor for user-defined end token ok
168: Default %printer and %destructor are not for error or $undefined ok
169: Default %printer and %destructor are not for $accept ok
170: Default %printer and %destructor for mid-rule values ok
171: @$ in %initial-action implies %locations        ok
172: @$ in %destructor implies %locations            ok
173: @$ in %printer implies %locations               ok
174: Qualified $$ in actions: yacc.c                 ok
175: Qualified $$ in actions: glr.c                  ok
176: Qualified $$ in actions: lalr1.cc               ok
177: Qualified $$ in actions: glr.cc                 ok
178: Fix user actions without a trailing semicolon   ok
179: Destroying lookahead assigned by semantic action ok
180: YYBACKUP                                        ok

Conflicts.

181: S/R in initial                                  ok
182: %nonassoc and eof                               ok
183: %error-verbose and consistent errors            skipped (conflicts.at:313)
184: LAC: %nonassoc requires splitting canonical LR states ok
185: Unresolved SR Conflicts                         ok
186: Resolved SR Conflicts                           ok
187: Defaulted Conflicted Reduction                  ok
188: %expect not enough                              ok
189: %expect right                                   ok
190: %expect too much                                ok
191: %expect with reduce conflicts                   ok
192: %prec with user string                          ok
193: %no-default-prec without %prec                  ok
194: %no-default-prec with %prec                     ok
195: %default-prec                                   ok
196: Unreachable States After Conflict Resolution    ok
197: Solved conflicts report for multiple reductions in a state ok
198: %nonassoc error actions for multiple reductions in a state ok
199: -W versus %expect and %expect-rr                ok

Simple LALR(1) Calculator.

200: Calculator                                      ok
201: Calculator %defines                             ok
202: Calculator %locations                           ok
203: Calculator %name-prefix="calc"                  ok
204: Calculator %verbose                             ok
205: Calculator %yacc                                ok
206: Calculator %error-verbose                       ok
207: Calculator %define api.pure full %locations     ok
208: Calculator %define api.push-pull both %define api.pure full %locations ok
209: Calculator %error-verbose %locations            ok
210: Calculator %error-verbose %locations %defines %name-prefix "calc" %verbose %yacc ok
211: Calculator %error-verbose %locations %defines %define api.prefix "calc" %verbose %yacc ok
212: Calculator %debug                               ok
213: Calculator %error-verbose %debug %locations %defines %name-prefix "calc" %verbose %yacc ok
214: Calculator %error-verbose %debug %locations %defines %define api.prefix "calc" %verbose %yacc ok
215: Calculator %define api.pure full %verbose %debug %locations %defines %name-prefix "calc" %verbose %yacc ok
216: Calculator %define api.push-pull both %define api.pure full %verbose %debug %locations %defines %define api.prefix "calc" %verbose %yacc ok
217: Calculator %define api.pure %error-verbose %debug %locations %defines %define api.prefix "calc" %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count} ok

Simple GLR Calculator.

218: Calculator %glr-parser                          ok
219: Calculator %glr-parser %defines                 ok
220: Calculator %glr-parser %locations               ok
221: Calculator %glr-parser %name-prefix "calc"      ok
222: Calculator %glr-parser %define api.prefix "calc" ok
223: Calculator %glr-parser %verbose                 ok
224: Calculator %glr-parser %yacc                    ok
225: Calculator %glr-parser %error-verbose           ok
226: Calculator %glr-parser %define api.pure %locations ok
227: Calculator %glr-parser %error-verbose %locations ok
228: Calculator %glr-parser %error-verbose %locations %defines %name-prefix "calc" %verbose %yacc ok
229: Calculator %glr-parser %debug                   ok
230: Calculator %glr-parser %error-verbose %debug %locations %defines %name-prefix "calc" %verbose %yacc ok
231: Calculator %glr-parser %error-verbose %debug %locations %defines %define api.prefix "calc" %verbose %yacc ok
232: Calculator %glr-parser %define api.pure %error-verbose %debug %locations %defines %name-prefix "calc" %verbose %yacc ok
233: Calculator %glr-parser %define api.pure %error-verbose %debug %locations %defines %name-prefix "calc" %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count} ok
234: Calculator %glr-parser %define api.pure %error-verbose %debug %locations %defines %define api.prefix "calc" %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count} ok

Simple LALR(1) C++ Calculator.

235: Calculator %skeleton "lalr1.cc" %defines %locations ok
236: Calculator %language "C++" %defines %locations  ok
237: Calculator %language "C++" %defines %locations %define api.location.type Span ok
238: Calculator %language "C++" %defines %locations %error-verbose %name-prefix "calc" %verbose %yacc ok
239: Calculator %language "C++" %defines %locations %error-verbose %define api.prefix "calc" %verbose %yacc ok
240: Calculator %language "C++" %defines %locations %error-verbose %debug %name-prefix "calc" %verbose %yacc ok
241: Calculator %language "C++" %defines %locations %pure-parser %error-verbose %debug %define api.prefix "calc" %verbose %yacc ok
242: Calculator %language "C++" %defines %locations %pure-parser %error-verbose %debug %name-prefix "calc" %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count} ok
243: Calculator %language "C++" %defines %locations %pure-parser %error-verbose %debug %define api.prefix "calc" %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count} ok

Simple GLR C++ Calculator.

244: Calculator %skeleton "glr.cc" %defines %locations ok
245: Calculator %language "C++" %glr-parser %defines %locations  ok
246: Calculator %language "C++" %glr-parser %defines %locations %define api.location.type Span ok
247: Calculator %language "C++" %glr-parser %defines %locations %error-verbose %name-prefix "calc" %verbose %yacc ok
248: Calculator %language "C++" %glr-parser %defines %locations %error-verbose %define api.prefix "calc" %verbose %yacc ok
249: Calculator %language "C++" %glr-parser %defines %locations %debug ok
250: Calculator %language "C++" %glr-parser %defines %locations %error-verbose %debug %name-prefix "calc" %verbose %yacc ok
251: Calculator %language "C++" %glr-parser %defines %locations %pure-parser %error-verbose %debug %name-prefix "calc" %verbose %yacc ok
252: Calculator %language "C++" %glr-parser %defines %locations %pure-parser %error-verbose %debug %name-prefix "calc" %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count} ok
253: Calculator %language "C++" %glr-parser %defines %locations %pure-parser %error-verbose %debug %define api.prefix "calc" %verbose %yacc %parse-param {semantic_value *result} %parse-param {int *count} ok

Torture Tests.

254: Big triangle                                    ok
255: Big horizontal                                  ok
256: Many lookahead tokens                           ok
257: Exploding the Stack Size with Alloca            ok
258: Exploding the Stack Size with Malloc            ok

Existing Grammars.

259: GNU AWK 3.1.0 Grammar: LALR(1)                  ok
260: GNU AWK 3.1.0 Grammar: IELR(1)                  ok
261: GNU AWK 3.1.0 Grammar: Canonical LR(1)          ok
262: GNU Cim Grammar: LALR(1)                        ok
263: GNU Cim Grammar: IELR(1)                        ok
264: GNU Cim Grammar: Canonical LR(1)                ok
265: GNU pic (Groff 1.18.1) Grammar: LALR(1)         ok
266: GNU pic (Groff 1.18.1) Grammar: IELR(1)         ok
267: GNU pic (Groff 1.18.1) Grammar: Canonical LR(1) ok

Regression tests.

268: Trivial grammars                                ok
269: YYSTYPE typedef                                 ok
270: Early token definitions with --yacc             ok
271: Early token definitions without --yacc          ok
272: Braces parsing                                  ok
273: Duplicate string                                ok
274: Rule Line Numbers                               ok
275: Mixing %token styles                            ok
276: Invalid inputs                                  ok
277: Invalid inputs with {}                          ok
278: Token definitions                               ok
279: Characters Escapes                              ok
280: Web2c Report                                    ok
281: Web2c Actions                                   ok
282: Dancer                                          ok
283: Dancer %glr-parser                              ok
284: Dancer %skeleton "lalr1.cc"                     ok
285: Expecting two tokens                            ok
286: Expecting two tokens %glr-parser                ok
287: Expecting two tokens %skeleton "lalr1.cc"       ok
288: Braced code in declaration in rules section     ok
289: String alias declared after use                 ok
290: Extra lookahead sets in report                  ok
291: Token number in precedence declaration          ok
292: parse-gram.y: LALR = IELR                       ok
293: %error-verbose and YYSTACK_USE_ALLOCA           ok
294: %error-verbose overflow                         ok
295: LAC: Exploratory stack                          ok
296: LAC: Memory exhaustion                          ok
297: Lex and parse params: yacc.c                    ok
298: Lex and parse params: glr.c                     ok
299: Lex and parse params: lalr1.cc                  ok
300: Lex and parse params: glr.cc                    ok

C++ Features.

301: Doxygen Public Documentation                    skipped (c++.at:101)
302: Doxygen Private Documentation                   skipped (c++.at:102)
303: Relative namespace references                   ok
304: Absolute namespace references                   ok
305: Syntactically invalid namespace references      ok
306: Exception safety                                ok

Java Calculator.

307: Calculator                                      skipped (java.at:360)
308: Calculator %error-verbose                       skipped (java.at:360)
309: Calculator %locations                           skipped (java.at:360)
310: Calculator %error-verbose %locations            skipped (java.at:360)
311: Calculator %lex-param { InputStream is }        skipped (java.at:369)
312: Calculator %error-verbose %lex-param { InputStream is }  skipped (java.at:369)
313: Calculator %locations %lex-param { InputStream is }  skipped (java.at:369)
314: Calculator %error-verbose %locations %lex-param { InputStream is }  skipped (java.at:369)

Java Parameters.

315: Java parser class and package names             skipped (java.at:457)
316: Java parser class modifiers                     skipped (java.at:478)
317: Java parser class extends and implements        skipped (java.at:536)
318: Java %parse-param and %lex-param                skipped (java.at:556)
319: Java throws specifications                      skipped (java.at:688)
320: Java stype, position_class and location_class   skipped (java.at:719)
321: Java syntax error handling without error token  skipped (java.at:800)

C++ Type Syntax (GLR).

322: GLR: Resolve ambiguity, impure, no locations    ok
323: GLR: Resolve ambiguity, impure, locations       ok
324: GLR: Resolve ambiguity, pure, no locations      ok
325: GLR: Resolve ambiguity, pure, locations         ok
326: GLR: Merge conflicting parses, impure, no locations ok
327: GLR: Merge conflicting parses, impure, locations ok
328: GLR: Merge conflicting parses, pure, no locations ok
329: GLR: Merge conflicting parses, pure, locations  ok
330: GLR: Verbose messages, resolve ambiguity, impure, no locations ok

GLR Regression Tests

331: Badly Collapsed GLR States                      ok
332: Improper handling of embedded actions and dollar(-N) in GLR parsers ok
333: Improper merging of GLR delayed action sets     ok
334: Duplicate representation of merged trees        ok
335: User destructor for unresolved GLR semantic value ok
336: User destructor after an error during a split parse ok
337: Duplicated user destructor for lookahead        ok
338: Incorrectly initialized location for empty right-hand side in GLR ok
339: No users destructors if stack 0 deleted         ok
340: Corrupted semantic options if user action cuts parse ok
341: Undesirable destructors if user action cuts parse ok
342: Leaked semantic values if user action cuts parse ok
343: Incorrect lookahead during deterministic GLR    ok
344: Incorrect lookahead during nondeterministic GLR ok
345: Leaked semantic values when reporting ambiguity ok
346: Leaked lookahead after nondeterministic parse syntax error ok
347: Uninitialized location when reporting ambiguity ok
348: Missed %merge type warnings when LHS type is declared later ok
349: Ambiguity reports                               ok

Push Parsing Tests

350: Memory Leak for Early Deletion                  ok
351: Multiple impure instances                       ok
352: Unsupported Skeletons                           ok

## ------------- ##
## Test results. ##
## ------------- ##

334 tests were successful.
18 tests were skipped.
make[4]: Leaving directory `/sources/bison-2.7/tests'
make[3]: Leaving directory `/sources/bison-2.7/tests'
Making check in etc
make[3]: Entering directory `/sources/bison-2.7/etc'
make[3]: Nothing to be done for `check'.
make[3]: Leaving directory `/sources/bison-2.7/etc'
make[3]: Entering directory `/sources/bison-2.7'
make[3]: Nothing to be done for `check-am'.
make[3]: Leaving directory `/sources/bison-2.7'
make[2]: Leaving directory `/sources/bison-2.7'
make[1]: Leaving directory `/sources/bison-2.7'
